{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","components/api/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","setTitle","error","setError","setMovie","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","fetch","then","response","ok","Error","status","statusText","json","getMovie","foundedMovie","Responce","Title","Plot","Poster","imdbID","App","data","setMovies","newMovie","some","ReactDOM","render","document","getElementById"],"mappings":"8wEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SCJ3BG,G,MAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,EAA0BC,mBAAS,IAAnC,mBAAOhB,EAAP,KAAciB,EAAd,KACA,EAA0BD,oBAAS,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAA0BH,mBAAS,MAAnC,mBAAOL,EAAP,KAAcS,EAAd,KAuBA,OACE,oCACE,0BAAMhB,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQiB,QAAQ,eAAjC,eAIA,yBAAKjB,UAAU,WACb,2BACEkB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZpB,UAAU,kBACVqB,MAAOzB,EACP0B,SAAU,SAACC,GACTV,EAASU,EAAMC,OAAOH,OACtBN,GAAS,OAIdD,GACC,uBAAGd,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEkB,KAAK,SACLlB,UAAU,kBACVyB,QAtDO,YCVG,SAAC7B,GACvB,OAAO8B,MAAM,GAAD,OAHE,+CAGF,OAAc9B,IACvB+B,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,WDIlBC,CAAStC,GACN+B,MAAK,SAACQ,GACyB,UAA1BA,EAAaC,UAMjBpB,EAAS,CACPpB,MAAOuC,EAAaE,MACpBxC,YAAasC,EAAaG,KAC1BxC,OAAQqC,EAAaI,OACrBxC,QAAQ,8BAAD,OAAgCoC,EAAaK,OAA7C,KACP/B,OAAQ0B,EAAaK,SAEvBzB,GAAS,GACTF,EAAS,KAbPE,EAAS,aA+CP,iBASF,yBAAKf,UAAU,WACb,4BACEkB,KAAK,SACLlB,UAAU,oBACVyB,QAAS,WACPd,EAASJ,GACTS,EAAS,QALb,sBAcN,yBAAKhB,UAAU,aACb,wBAAIA,UAAU,SAAd,WACCO,GAAS,kBAAC,EAAcA,O,OEnFpBkC,EAAM,WACjB,MAA4B7B,mBAAS8B,GAArC,mBAAOrC,EAAP,KAAesC,EAAf,KAcA,OACE,yBAAK3C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWW,SAlBA,SAACiC,GACXA,IAIAvC,EAAOwC,MAAK,SAAAtC,GAAK,OACpBA,EAAMR,UAAY6C,EAAS7C,YAE3B4C,GAAU,uCAAUtC,GAAV,CAAkBuC,cCZlCE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fcdf3a71.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../api/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(false);\n  const [movie, setMovie] = useState(null);\n\n  const searchFilm = () => {\n    getMovie(title)\n      .then((foundedMovie) => {\n        if (foundedMovie.Responce === 'False') {\n          setError('true');\n\n          return;\n        }\n\n        setMovie({\n          title: foundedMovie.Title,\n          description: foundedMovie.Plot,\n          imgUrl: foundedMovie.Poster,\n          imdbUrl: `https://www.imdb.com/title/${foundedMovie.imdbID}/`,\n          imdbId: foundedMovie.imdbID,\n        });\n        setError(false);\n        setTitle('');\n      });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={searchFilm}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addMovie(movie);\n                setMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard {...movie} />}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=a8ca348f&t=';\n\nexport const getMovie = (title) => {\n  return fetch(`${API_URL}${title}`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (newMovie) => {\n    if (!newMovie) {\n      return;\n    }\n\n    if (!movies.some(movie => (\n      movie.imdbUrl === newMovie.imdbUrl\n    ))) {\n      setMovies(() => [...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}